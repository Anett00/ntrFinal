<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAACAAEAAQBcCwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAHAAAACAAgGAAAAFSW8WgAACyNJ
        REFUeJzt3EFy20YARUEwpftfI8dkFi46tCVKpERiBvO6V4kXKURV4PMfQDz9+++/G09xHn0BACGnn/4H
        3p5xFTFCBzDe9Wfxt2IogF8TPIC5XT6nHwqhAL4neADH9FAIBfAX0QNYx3m7I4LlAIoewLq+jOA/O13I
        TM6b+AEUfPpZX1mAggfQdHMJrr4ArT0APuzAqgEUPgCuvWvCagEUPgBu+aMPqzwDFD0AHnL0BWjxAfCI
        3804cgCFD4BvO2IArT4AfuK8bccLoPAB8BRHeQlG+AB4qiMsQPED4NnOMy9A4QPgZWZdgOIHwEvNGEDx
        A+DlZjoCFT4AdjPLAhQ/AHY1QwDFD4DdjQ6g+AEwxMgAih8Aw4wKoPgBMNSIAIofAMPtHUDxA2AKewZQ
        /ACYxl4BFD8AprJHAMUPgOm8OoDiB8CUXhlA8QNgWq8KoPgBMLXRX4UGAEO8IoDWHwDTe3YAxQ+AQ3hm
        AMUPgMPwDBCApGcF0PoD4FCeEUDxA+BwHIECkPTTAFp/ABzSTwIofgAcliNQAJK+G0DrD4BD+04AxQ+A
        w3MECkDSowG0/gBYggUIQNIjAbT+AFiGBQhA0r0BtP4AWIoFCEDSPQG0/gBYjgUIQNJXAbT+AFiSBQhA
        kgACkPRZAB1/ArAsCxCApFsBtP4AWJoFCECSAAKQ9FEAHX8CsDwLEIAkAQQg6e8AOv4EIMECBCBJAAFI
        EkAAkq4D6PkfABkWIABJAghAkgACkHQJoOd/AKRYgAAkCSAASQIIQJIAApAkgAAk/bN5AxSAIAsQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgKS30RfAtE6jLwAWch59Abwn
        gFwTPXiN63tLDCfhCJQL8YN9uNcmIYBsmxsS9uaem4AAApAkgAAkCSCOYmAM995gAghAkgACkCSAACQJ
        IABJAghAkgACkCSAACQJIABJAghAkgACkCSAACQJIABJAghAkgACkCSAACQJIABJAghAkgACkCSAACQJ
        IOfRFwBR7r3BBBCAJAEEIEkA2TZHMbA399wEBJALNyTsw702ibfRF8BUrm/M07CrgPWI3oQEkFvcsMDS
        HIECkCSAACQJIABJAghAkgACkCSAACQJIABJAghAkgACkCSAACQJIABJAghAkgACkCSAACQJIABJAghA
        kgACkCSAACQJIABJAghAkgACkCSAACQJIABJAghAkgACkCSAACQJIABJAghAkgACkCSAACQJIABJb6Mv
        gGmdRl8ALOQ8+gJ4TwC5JnrwGtf3lhhOwhEoF+IH+3CvTUIA2TY3JOzNPTcBAQQgSQABSBJAHMXAGO69
        wQQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAA
        kgQQgCQBBCBJAAFIEkDOoy8Aotx7gwkgAEkCCECSALJtjmJgb+65CQggF25I2Id7bRJvoy+AqVzfmKdh
        VwHrEb0JCSC3uGGBpTkCBSBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQBBCBJAAFIEkAAkgQQgCQB
        BCBJAAFIEkAAik4CCECSAAKQJIAA1Jy2TQABiBJAAEpOl38QQACSBBCAitP1vwggAAWnv/9AAAFY3bv4
        bZsAArC2D+O3bQIIwLpuxm/bBBCANX0av20TQACiBBCAJAEEIEkAAUh6G30BfP2gFuCJzqMvYAd3fa4K
        4D5EDmAyAvgaggcwOQF8LuEDOAgBfA7hA46g8PzvbgL4M8IHcFB+DeL7xA/gwATwe8QP4OAcgT5G+ADm
        dvfntAV4P/EDWIgA3kf8ABYjgF8TP4AFCSAASQL4OesPYFECeJv4ASxMAD8mfgCLE0AAkgTwPesPIEAA
        AUgSwD9ZfwARAghAkgD+z/oDCBFAAJIEEIAkAQQgSQB/8fwPIEYAAUgSQACSBBCAJAEEaDiPvoAdPPQ+
        hwACkCSAACQJIABJAghAkgACkCSAAA2Fb7x66E1XAQQgSQABSBJAAJIE8JfCNyQAcEUAAUgSQACSBBCA
        JAH8n+eAACECCECSAP7JCgSI+GdrfD0OAPzBAnzPCgQIEEAAkgTwY1YgwOIE8DYRBFiYAAKQdAmgN0E/
        ZgUCLMoC/JoIAixIAO8jggCLEcD7iSDA/O7+rL4OoOeAXxNBgEVYgI87b0IIcHgC+H0iCHBgAvgz1iDA
        Qf0dQM8Bv0cIgSPwGX/FAnwuIQQ4iLfRF7CovyPob10Ak/kogKfNinm2z36e4ggwgAU4nr9sADzXebtj
        XHgGCEDSrQA6lgNgaRYgAEmfBdAKBOCovny/wgIEIEkAAVjVpyvwqwA6BgXgyG5G0AIEYHUfRvCeAFqB
        ABzduwhagABU/BHBewNoBQKwFAsQgJLfK/CRAFqBACzDAgSg5rxtjwfQCgRgCRYgAEnfCaAVCMDRnb+7
        AEUQgENzBApA0k8CaAUCcFg/XYAiCMAhOQIFIOkZAbQCATicZy1AEQTgUByBApD0zABagQAcxrMXoAgC
        cAivOAIVQQCm5xkgAEmvCqAVCMDUXrkARRCAab36CFQEAZjSHs8ARRCA6ez1EowIAjCVPd8CFUEAprH3
        r0GIIABTGPF7gCIIwHCjfhFeBAEYauQ3wYggAMOM/io0EQRgiNEB3DYRBGCAGQK4bSIIwM5mCeC2/Yqg
        EAKwi5kCeCGCALzcjAHcNhEE4MVmDeC2ORIF4IVmDuCFCALwbKcjBHDbrEEAnuwoAbwQQQCe4mgB3DZr
        EICfOW3bMQN4IYIAfNuRA7ht1iAAj/ndjKMH8EIIAXjIKgG8EEIAbvmjD6sF8EIIAbj2rgmrBvBCCAH4
        sANve1/FINf/8+dhVwHA3m6OoNUX4EesQoCGTz/rKwvwI1YhwLq+HDrlAF4TQ4B13HXKJ4Dv/f2DE0SA
        Y3jo8ZYAfk0QAeb2rfc6BPBxt37Qwgiwnx+/zPgf+I6UODpBjbQAAAAASUVORK5CYII=
</value>
  </data>
</root>